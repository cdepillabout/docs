filetype plugin on
filetype indent on

set fileencodings=utf-8
set mouse=a
set foldenable
set background=dark
set tabstop=4
set shiftwidth=4
set softtabstop=4

set viminfo='100,\"100   " Keep a .viminfo file.

set wildmode=list:longest	" When autocompleting things, do it like the shell
set scrolloff=3				" Scroll when the cursor is 3 lines from top or bottom
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set ruler					" know how far you are in a file
set enc=utf-8
set fenc=utf-8
set fencs=iso-2022-jp,euc-jp,cp932
set backspace=indent,eol,start	" make sure backspace works correctly

" try to always use a syntax
syntax on

" always show a tabline
set showtabline=2

colorscheme darkblue
"colorscheme default
"colorscheme delek
"colorscheme desert
"colorscheme torte

" highlight tab line differently
hi TabLine term=bold,reverse cterm=bold ctermfg=white ctermbg=white
hi TabLineFill term=bold,reverse cterm=bold ctermfg=white ctermbg=white
hi TabLineSel term=reverse ctermfg=white ctermbg=lightblue

" highlight the popup menu a little differently
hi PmenuSel ctermbg=lightblue

" make sure the normal background is black
hi Normal guibg=black


let java_highlight_java_lang_ids=1
let java_highlight_all=1
"let java_highlight_functions="style"
"let java_allow_cpp_keywords=1

" Minibufexplorer plugin settings
"let g:miniBufExplMapWindowNavVim = 1	" Let C-h, C-j, C-k, C-l move your 
										" current active buffer window
"let g:miniBufExplMapCTabSwitchBufs = 1	" Let C-TAB move to the next buffer and
										" C-SHIFT-TAB move to the previous
										" buffer
"let g:miniBufExplModSelTarget = 1		" Force minibufferexplorer to put
										" buffers in windows with 
										" non-modifiable buffers


" use F5 for turning off and on hlsearch,
" in both input mode (imap?) and command mode (map?)
map <F5> :set hlsearch!<CR>
imap <F5> <ESC>:set hlsearch!<CR>a

" use <C-h> and <C-l> to go forward and backward in tabs
" nnoremap just makes a normal mode mapping
nnoremap <C-h> gT
nnoremap <C-l> gt

" F2 for turning on and off tag list
nnoremap <F2> :TlistToggle<CR>

" use CTRL-s for saving
" this doesn't work...
"nmap <c-s> :w<CR>
"imap <c-s> <Esc>:w<CR>a


" source ~/.vim/plugin/cscope_maps.vim
" source ~/.vim/syntax/javascript.vim

" show when autocmds are called
"set verbose=9


""""""""" This uses the execute command to create an autocmd 
""""""""" that sets the fold_method if the syntax matches.
""""""""" You have to use execute so that the variables get
""""""""" evaluated now instead of when the autocmd executes.

function Add_auto_foldmethod(syntax_of_file, fold_method)
	execute "autocmd Syntax * "
		\ "if expand(\"<amatch>\") == \"" . a:syntax_of_file . "\" | "
		\ "execute \"set foldmethod=" . a:fold_method . "\" | "
		\ " endif "
endfunction

call Add_auto_foldmethod("c", "syntax")
call Add_auto_foldmethod("cpp", "syntax")
"call Add_auto_foldmethod('asm', 'indent')
call Add_auto_foldmethod("java", "syntax")
call Add_auto_foldmethod("python", "indent")

" Make sure I can get spell checking when the file I am editing does not have
" a syntax associated with it.
