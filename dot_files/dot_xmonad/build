#!/usr/bin/env bash
#
#

function die ()
{
	local msg="${1}"
	echo "${msg}" >&2
    exit 1
}

cd ~/.xmonad

# Source the xmonad build variables, like the LTS version to use.
source ./xmonad_build_vars.sh

if [ "$?" -ne 0 ] ; then
	die "Failed to source the xmonad_build_vars.sh file."
fi

# Create the binary directory for things like taffybar and gtk2hs build tools.
mkdir -p "${XMONAD_LOCAL_BIN_PATH}"

# Install gtk2hs-buildtools for taffybar.
PATH="${XMONAD_LOCAL_BIN_PATH}:${PATH}" stack install \
	--resolver "${XMONAD_STACK_RESOLVER}" \
	--local-bin-path "${XMONAD_LOCAL_BIN_PATH}" \
	gtk2hs-buildtools \

if [ "$?" -ne 0 ] ; then
	die "Failed to install gtk2hs-buildtools (for taffybar)."
fi

# Install taffybar.
PATH="${XMONAD_LOCAL_BIN_PATH}:${PATH}" stack install \
	--resolver "${XMONAD_STACK_RESOLVER}" \
	--local-bin-path "${XMONAD_LOCAL_BIN_PATH}" \
	dbus \
	gtk-traymanager \
	libxml-sax \
	taffybar

if [ "$?" -ne 0 ] ; then
	die "Failed to install taffybar."
fi

# Install xmonad.
PATH="${XMONAD_LOCAL_BIN_PATH}:${PATH}" stack install \
	--resolver "${XMONAD_STACK_RESOLVER}" \
	--local-bin-path "${XMONAD_LOCAL_BIN_PATH}" \
	xmonad

if [ "$?" -ne 0 ] ; then
	die "Failed to install xmonad."
fi

# delete old xmonad output files
rm -rf "${XMONAD_DIR}/xmonad.hi" "${XMONAD_DIR}/xmonad.o"

# Figure out what the binary name is for the output xmonad binary.
xmonad_binary="${1}"
if [ "${xmonad_binary}" == "" ] ; then
	xmonad_binary="xmonad-x86_64-linux"
fi

# Build our xmonad config.
PATH="${XMONAD_LOCAL_BIN_PATH}:${PATH}" stack ghc \
	--resolver "${XMONAD_STACK_RESOLVER}" \
	--package dbus \
	--package gtk-traymanager \
	--package libxml-sax \
	--package taffybar \
	--package xmonad \
	--package xmonad-contrib \
	-- --make xmonad.hs -i -ilib -fforce-recomp -main-is main -o "${xmonad_binary}"
