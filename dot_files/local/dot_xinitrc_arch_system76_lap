#!/bin/sh
# $Xorg: xinitrc.cpp,v 1.3 2000/08/17 19:54:30 cpqbld Exp $

# setup dbus
# This is needed for gtk applications like evince.
# test for an existing bus daemon, just to be safe
if test -z "$DBUS_SESSION_BUS_ADDRESS" ; then
	# if not found, launch a new one
	eval `dbus-launch --sh-syntax`
fi

# load in user resources
userresources=$HOME/.Xresources
if [ -f $userresources ]; then
    xrdb -merge $userresources
fi

# swap ctrl and caps
#swap_caps_ctrl_xmodmap="$HOME/.Xmodmap_swap_ctrl_caps"

#if [ -f "$swap_caps_ctrl_xmodmap" ]; then
#	( sleep 3 && xmodmap "$swap_caps_ctrl_xmodmap" ) &
#fi


#setxkbmap -option ctrl:swapcaps     # Swap Left Control and Caps Lock
setxkbmap -option ctrl:nocaps       # Make Caps Lock a Control key


export TERM="xterm-256color"
# export LC_ALL="ja_JP.UTF-8"
# export LANG="ja_JP.UTF-8"
export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"

# Start fcitx (Japanese IME)
export XMODIFIERS="@im=fcitx"
export XMODIFIER="@im=fcitx"
export GTK_IM_MODULE="fcitx"
export QT_IM_MODULE="fcitx"
fcitx &

# Start NetworkManager applet
nm-applet &

eval `ssh-agent`
xterm -e ssh-add &

eval `gpg-agent --daemon`

#xrandr-setup-screens --startup
xrandr --verbose \
	--output LVDS-1 --mode 1920x1080 \
	--output HDMI-1 --auto --above LVDS-1 \
	--output DVI-I-1 --off &

# Source xmonad settings for xmonad and taffybar.
# XXX: This must be run using `.` and not `source` on systems where `sh` is
# not `bash`, because xinit always runs this file with `sh` (even if a
# different hashbang is specified).  Some versions of `sh` do know know the
# `source` alias for `.`.
. "${HOME}/.xmonad/xmonad_build_vars.sh"

# Start taffybar.
PATH="${XMONAD_LOCAL_BIN_PATH}:$PATH" stack exec \
	--local-bin-path="${XMONAD_LOCAL_BIN_PATH}" \
	--resolver="${XMONAD_STACK_RESOLVER}" \
	-- taffybar &

# Remove old xmonad.state file because it keeps around monitor dimensions that
# we might not want.
rm -f "${XMONAD_DIR}/xmonad.state"

# Start xmonad.
${XMONAD_LOCAL_BIN_PATH}/xmonad &
windowmanagerpid=$!

sleep 5
{
	# change keys on Japanese keyboard if we are using a Japanese keyboard
	japanese_keyboard_xmodmap="$HOME/.Xmodmap_japanese_keyboard"

	if [ -f "$japanese_keyboard_xmodmap" ]; then
		grep_output=$(lsusb | grep '045e:00dc Microsoft Corp.')
		if [ -n "$grep_output" ] ; then
			xmodmap "$japanese_keyboard_xmodmap"
		fi
	fi
} &

wait $windowmanagerpid
